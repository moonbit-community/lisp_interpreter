// Generated using `moon info`, DON'T EDIT IT
package "bobzhang/lisp_interpreter"

// Values
fn eval(String) -> Value raise

fn evaluate(Sexp) -> Value raise

fn parse_sexp(String) -> Sexp raise

// Errors
pub suberror ParseError {
  UnmatchedParens(String)
  UnexpectedParens(String)
  UnexpectedEOF
}
impl Show for ParseError
impl ToJson for ParseError

// Types and methods
pub struct Env(Map[String, Value])
fn Env::builtin() -> Self
fn Env::inner(Self) -> Map[String, Value]
impl Show for Env

pub(all) enum Sexp {
  Atom(String)
  List(Array[Sexp])
}
impl Eq for Sexp
impl Show for Sexp
impl ToJson for Sexp

pub(all) enum Value {
  Number(Int)
  Boolean(Bool)
  Symbol(String)
  Function(Array[String], Sexp, Env)
  BuiltinFunction(String)
}
impl Show for Value
impl ToJson for Value

// Type aliases

// Traits

